Naming convention
----------------------------------------------------------------------------------------------
-The name of a BEM [Block,Element,Modifier] entity is unique. The same BEM entity always has the same name in all technologies (CSS, JavaScript, and HTML). The primary purpose of the naming convention is to give names meaning so that they are as informative as possible for the developer.

Compare the same name for a CSS selector that is written in different ways:

*menuitemvisible.

*menu-item-visible.

*menuItemVisible.

-To understand the meaning of the first name, you need read through each word carefully. In the last two examples, the name is clearly divided into its parts. But none of these names helps us understand that menu is a block, item is an element, and visible is a modifier. The rules for naming BEM entities were developed in order to make entity names unambiguous and easy to understand.


--------------------------------------------------------------------------------------------------
Naming rules

[block-name__elem-name_mod-name_mod-val]

*Names are written in lowercase Latin letters.

*Words are separated by a hyphen (-).

*The block name defines the namespace for its elements and modifiers.

*The element name is separated from the block name by a double underscore (__).

*The modifier name is separated from the block or element name by a single underscore (_).

*The modifier value is separated from the modifier name by a single underscore (_).

*For boolean modifiers, the value is not included in the name.


-Important: Elements of elements do not exist in the BEM methodology. The naming rules do not allow creating elements of elements, but you can nest elements inside each other in the DOM tree.